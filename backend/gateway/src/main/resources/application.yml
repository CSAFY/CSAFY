server:
  port: 8000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedHeaders: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway GlobalFilter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE # lb => load balancer
#          predicates:
#            - Path=/user-service/login
#            - Method=POST
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#        - id: user-service
#          uri: lb://USER-SERVICE # lb => load balancer
#          predicates:
#            - Path=/user-service/users
#            - Method=POST
#          filters:
#            - RemoveRequestHeader=Cookie
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE # lb => load balancer
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE # lb => load balancer
          predicates:
            - Path=/user-service/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - AuthorizationHeaderFilter
        - id: chat-service
          uri: lb://CHAT-SERVICE # lb => load balancer
          predicates:
            - Path=/chat-service/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/chat-service/(?<segment>.*), /$\{segment}
#        - id: first-service
#          uri: lb://MY-FIRST-SERVICE # lb => load balancer
##          uri: http://localhost:8081/
#          predicates:
#            - Path=/first-service/**
#          filters:
##            - AddRequestHeader=first-request, first-request-header2
##            - AddResponseHeader=first-response, first-response-header2
#            - CustomFilter
#        - id: second-service
#          uri: lb://MY-SECOND-SERVICE
##          uri: http://localhost:8082/
#          predicates:
#            - Path=/second-service/**
#          filters:
##            - AddRequestHeader=second-request, second-request-header2
##            - AddResponseHeader=second-response, second-response-header2
#            - name: CustomFilter
#            - name: LoggingFilter
#              args:
#                baseMessage: Hi, there.
#                preLogger: true
#                postLogger: true

token:
  expiration_time: 864000000
  secret: zjb@=h&h077b^xz3n!0yijzx3iqp&yavug7n4+i!3$hrvwg2kz

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace

