server:
  port: 0
#  port: 20000

spring:
  application:
    name: user-service

  # REDIS
#  redis:
#    database: 0
#    host: redis-18085.c54.ap-northeast-1-2.ec2.cloud.redislabs.com
#    password: ZJPxInJwyW70mpMclChMkZYWjZQ5z17D
#    port: 18085

  # 마리아 DB(로컬)
  #  datasource:
  #    url: jdbc:mysql://localhost:3306/tupli
  #    driver-class-name: org.mariadb.jdbc.Driver
  #    username: root
  #    password: 1234
#
#  # 마리아 DB(배포)
#  datasource:
#    url: jdbc:mysql://stg-yswa-kr-practice-db-master.mariadb.database.azure.com:3306/S06P22A102?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
#    driver-class-name: org.mariadb.jdbc.Driver
#    username: S06P22A102
#    password: YT8FT0otFm

  # 마리아 DB(배포)
  datasource:
    url: jdbc:mysql://stg-yswa-kr-practice-db-master.mariadb.database.azure.com:3306/S06P31A102?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    driver-class-name: org.mariadb.jdbc.Driver
    username: S06P31A102
    password: tTelzd9jrW

  # JPA 세팅
  jpa:
    hibernate:
#      ddl-auto: create # 애플리케이션 실행시점에 테이블 다 지우고 새로 생성
      ddl-auto: update  # 개발 단계에서는
#      ddl-auto: create-drop
#      ddl-auto: validate  # 최종 배포 운영 단계
#      ddl-auto: none
    show-sql: true

    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        default_batch_fetch_size: 1000 #1대다 쿼리 뻥튀기 페이징 문제, 최적화 옵션 (MAX는 거의 1000)
        format_sql: true # 너무 길어지면 읽기 힘들어짐
  #        show_sql: true

  messages:
    basename: messages
    encoding: UTF-8

  # Mail Authentication
  mail:
    host: smtp.gmail.com
    port: 587
    username: hotsixturtles@gmail.com
    password: Turtle@666
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          transport:
          protocol: smtp
          debug: true
          ssl:
            protocols: TLSv1.2

#   Security OAuth
  security:
    oauth2.client:
      registration:
        google:
          clientId: 692747234718-8s6t26tako0ei0dm2j7dj0fj72k72b89.apps.googleusercontent.com
          clientSecret: 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
#          redirectUri: http://localhost:8080/oauth2/code/google  # 안전용 지정해주기. 보험.
          redirectUri: http://k6a102.p.ssafy.io:8000/user-service/oauth2/code/google  # 안전용 지정해주기. 보험.
          scope:
            - email
            - profile

# 토큰 관련 secret Key 및 RedirectUri 설정
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpiry: 201600000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:
      - http://k6a102.p.ssafy.io/oauth/redirect
#      - https://tupli.kr/oauth/redirect

logging.level:
  org:
    #    springframework.web: DEBUG
    springframework.web: WARN
#    hibernate.SQL: INFO #debug # hibernate가 생성하는 로그를 다 보여줌
# org.hibernate.type: trace # 쿼리 파라미터 로그 남기기

# 최종 배포진행시 1차적 교체
jwt:
  secret: zjb@=h&h077b^xz3n!0yijzx3iqp&yavug7n4+i!3$hrvwg2kz

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
