buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'csafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencies {
	// Basic
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.2'

	//JWT 토큰
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	//OAUTH
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	// 메일 인증
	implementation 'javax.mail:mail:1.4.7'
	implementation 'org.springframework:spring-context-support:5.3.14'
	implementation 'javax.activation:activation:1.1.1'

	// 1차원 배열 json의 형태로 집어넣기
	implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.12.1'

	//queryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	// logBACK 관련
//    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha15'
	implementation 'com.sndyuk:logback-more-appenders:1.8.7'
	implementation 'org.fluentd:fluent-logger:0.3.4'
	runtimeOnly 'org.komamitsu:fluency-core:2.6.4'
	implementation 'org.komamitsu:fluency-fluentd:2.6.4'

	// 로그 분산 추적
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.1.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.1.2'

	//openfeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

//// Slf4j 중복 이슈
//configurations {
//	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//	all*.exclude group: 'org.springframework.boot', module: 'logback-classic'
//}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


//queryDSL
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
// 버전이나 IDE 환경에 따라 바뀌기 쉬우니 문제 발생시 구글 참조
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

// querydsl cannot find symbol 문제 해결
compileQuerydsl.doFirst {
	if(file(querydslDir).exists() )
		delete(file(querydslDir))
}